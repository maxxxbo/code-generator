package ${package}.${moduleName}.service.impl;

import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.util.Assert;
import javax.annotation.Resource;

import java.util.List;
import ${package}.${moduleName}.dao.${className}Dao;
import ${package}.${moduleName}.entity.${className}Entity;
import ${package}.${moduleName}.service.${className}Service;


/**
*  ${comments}
*/
@Service
@Slf4j
public class ${className}ServiceImpl implements ${className}Service {

    @Resource
    ${className}Dao ${classname}Dao;

    @Override
    public List<${className}Entity> getAllData(${className}Entity param) {
        return ${classname}Dao.getAllData(param);
    }

    @Override
    public ${className}Entity getDataById(Integer id) {
        return ${classname}Dao.getDataById(id);
    }

    @Override
    @Transactional(rollbackFor = IllegalArgumentException.class)
    public void saveData(${className}Entity param) {
        int i = ${classname}Dao.saveData(param);
        Assert.isTrue(i==i, "新增${comments}失败");
    }

    @Override
    @Transactional(rollbackFor = IllegalArgumentException.class)
    public void updateData(${className}Entity param) {
        int i = ${classname}Dao.updateData(param);
        Assert.isTrue(i==i, "修改${comments}失败");
    }

    @Override
    @Transactional(rollbackFor = IllegalArgumentException.class)
    public void deleteDataById(Integer id) {
        int i = ${classname}Dao.deleteDataById(id);
        Assert.isTrue(i==i, "删除${comments}失败");
    }

}
