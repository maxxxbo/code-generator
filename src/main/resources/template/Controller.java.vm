package ${package}.${moduleName}.controller;

import org.springframework.web.bind.annotation.*;

import ${package}.${moduleName}.common.JsonResult;
import ${package}.${moduleName}.entity.${className}Entity;
import ${package}.${moduleName}.service.${className}Service;
import java.util.List;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;

import javax.annotation.Resource;



/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@Api(tags = "${comments}模块")
@RestController
@RequestMapping("/${pathName}")
public class ${className}Controller {

    @Resource
    private ${className}Service ${classname}Service;

    /**
     * 列表
     */
    @ApiOperation("获取数据列表")
    @GetMapping("/list")
    public JsonResult list(@ModelAttribute ${className}Entity params){
        List<${className}Entity> list = ${classname}Service.getAllData(params);
        return JsonResult.success(list);
    }


    /**
     * 信息
     */
    @ApiOperation("根据id查询数据")
    @GetMapping("/info/{${pk.attrname}}")
    public JsonResult info(@ApiParam(required = true, value = "数据id") @PathVariable("${pk.attrname}") Integer id){
		${className}Entity ${classname} = ${classname}Service.getDataById(id);

        return JsonResult.success(${classname});
    }

    /**
     * 保存
     */
    @ApiOperation("保存数据")
    @PostMapping("/save")
    public JsonResult save(@RequestBody ${className}Entity ${classname}){
		${classname}Service.saveData(${classname});

        return JsonResult.success();
    }

    /**
     * 修改
     */
    @ApiOperation("根据id修改数据，id必须包含")
    @PostMapping("/update")
    public JsonResult update(@RequestBody ${className}Entity ${classname}){
		${classname}Service.updateData(${classname});

        return JsonResult.success();
    }

    /**
     * 删除
     */
    @ApiOperation("根据id删除对应数据")
    @GetMapping("/delete")
    public JsonResult delete(@ApiParam(required = true, value = "数据id") Integer id){
		${classname}Service.deleteDataById(id);

        return JsonResult.success();
    }

}
